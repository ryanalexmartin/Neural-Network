{"version":3,"file":"loaders.js","names":["loadingManager","THREE","LoadingManager","onLoad","document","getElementById","style","display","console","log","main","onProgress","item","loaded","total","shaderLoader","XHRLoader","setResponseType","loadMultiple","SHADER_CONTAINER","urlObj","_","each","value","key","load","shader","neuronVert","neuronFrag","axonVert","axonFrag","OBJ_MODELS","OBJloader","OBJLoader","model","brain","children","TEXTURES","textureLoader","TextureLoader","tex","electric","input_image_01"],"sources":["../loaders.js"],"sourcesContent":["// Assets & Loaders --------------------------------------------------------\n\nvar loadingManager = new THREE.LoadingManager();\nloadingManager.onLoad = function () {\n\n\tdocument.getElementById( 'loading' ).style.display = 'none'; // hide loading animation when finished\n\tconsole.log( 'Done.' );\n\n\tmain();\n\n};\n\n\nloadingManager.onProgress = function ( item, loaded, total ) {\n\n\tconsole.log( loaded + '/' + total, item );\n\n};\n\n\nvar shaderLoader = new THREE.XHRLoader( loadingManager );\nshaderLoader.setResponseType( 'text' );\n\nshaderLoader.loadMultiple = function ( SHADER_CONTAINER, urlObj ) {\n\n\t_.each( urlObj, function ( value, key ) {\n\n\t\tshaderLoader.load( value, function ( shader ) {\n\n\t\t\tSHADER_CONTAINER[ key ] = shader;\n\n\t\t} );\n\n\t} );\n\n};\n\nvar SHADER_CONTAINER = {};\nshaderLoader.loadMultiple( SHADER_CONTAINER, {\n\n\tneuronVert: 'shaders/neuron.vert',\n\tneuronFrag: 'shaders/neuron.frag',\n\n\taxonVert: 'shaders/axon.vert',\n\taxonFrag: 'shaders/axon.frag'\n\n} );\n\n\n\nvar OBJ_MODELS = {};\nvar OBJloader = new THREE.OBJLoader( loadingManager );\nOBJloader.load( 'models/brain_vertex_low.obj', function ( model ) {\n\n\tOBJ_MODELS.brain = model.children[ 0 ];\n\n} );\n\n\nvar TEXTURES = {};\nvar textureLoader = new THREE.TextureLoader( loadingManager );\n\ntextureLoader.load( 'sprites/electric.png', function ( tex ) {\n\n\tTEXTURES.electric = tex;\n\n} );\n\ntextureLoader.load('sprites/img_4721.png', function(tex) {\n    TEXTURES.input_image_01 = tex;\n});"],"mappings":";;AAAA;;AAEA,IAAIA,cAAc,GAAG,IAAIC,KAAK,CAACC,cAAc,CAAC,CAAC;AAC/CF,cAAc,CAACG,MAAM,GAAG,YAAY;EAEnCC,QAAQ,CAACC,cAAc,CAAE,SAAU,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;EAC7DC,OAAO,CAACC,GAAG,CAAE,OAAQ,CAAC;EAEtBC,IAAI,CAAC,CAAC;AAEP,CAAC;AAGDV,cAAc,CAACW,UAAU,GAAG,UAAWC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAG;EAE5DN,OAAO,CAACC,GAAG,CAAEI,MAAM,GAAG,GAAG,GAAGC,KAAK,EAAEF,IAAK,CAAC;AAE1C,CAAC;AAGD,IAAIG,YAAY,GAAG,IAAId,KAAK,CAACe,SAAS,CAAEhB,cAAe,CAAC;AACxDe,YAAY,CAACE,eAAe,CAAE,MAAO,CAAC;AAEtCF,YAAY,CAACG,YAAY,GAAG,UAAWC,gBAAgB,EAAEC,MAAM,EAAG;EAEjEC,CAAC,CAACC,IAAI,CAAEF,MAAM,EAAE,UAAWG,KAAK,EAAEC,GAAG,EAAG;IAEvCT,YAAY,CAACU,IAAI,CAAEF,KAAK,EAAE,UAAWG,MAAM,EAAG;MAE7CP,gBAAgB,CAAEK,GAAG,CAAE,GAAGE,MAAM;IAEjC,CAAE,CAAC;EAEJ,CAAE,CAAC;AAEJ,CAAC;AAED,IAAIP,gBAAgB,GAAG,CAAC,CAAC;AACzBJ,YAAY,CAACG,YAAY,CAAEC,gBAAgB,EAAE;EAE5CQ,UAAU,EAAE,qBAAqB;EACjCC,UAAU,EAAE,qBAAqB;EAEjCC,QAAQ,EAAE,mBAAmB;EAC7BC,QAAQ,EAAE;AAEX,CAAE,CAAC;AAIH,IAAIC,UAAU,GAAG,CAAC,CAAC;AACnB,IAAIC,SAAS,GAAG,IAAI/B,KAAK,CAACgC,SAAS,CAAEjC,cAAe,CAAC;AACrDgC,SAAS,CAACP,IAAI,CAAE,6BAA6B,EAAE,UAAWS,KAAK,EAAG;EAEjEH,UAAU,CAACI,KAAK,GAAGD,KAAK,CAACE,QAAQ,CAAE,CAAC,CAAE;AAEvC,CAAE,CAAC;AAGH,IAAIC,QAAQ,GAAG,CAAC,CAAC;AACjB,IAAIC,aAAa,GAAG,IAAIrC,KAAK,CAACsC,aAAa,CAAEvC,cAAe,CAAC;AAE7DsC,aAAa,CAACb,IAAI,CAAE,sBAAsB,EAAE,UAAWe,GAAG,EAAG;EAE5DH,QAAQ,CAACI,QAAQ,GAAGD,GAAG;AAExB,CAAE,CAAC;AAEHF,aAAa,CAACb,IAAI,CAAC,sBAAsB,EAAE,UAASe,GAAG,EAAE;EACrDH,QAAQ,CAACK,cAAc,GAAGF,GAAG;AACjC,CAAC,CAAC"}