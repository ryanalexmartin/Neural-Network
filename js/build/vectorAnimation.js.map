{"version":3,"file":"vectorAnimation.js","names":[],"sources":["../vectorAnimation.js"],"sourcesContent":["// // Assuming your Three.js scene, camera, and renderer are already set up, \n// // you would have something like the following in your code:\n\n// // const scene = existing scene\n// // const camera = existing camera\n// // const renderer = existing renderer\n\n// const networkSVG = SVG.get('sprites/nn(2).svg');\n// const inputImageTexture = new THREE.TextureLoader().load('input.png');\n\n// // Convert Image to Particles\n// const particles = createParticlesFromImage(inputImageTexture);\n\n// scene.add(particles);\n\n// // Convert SVG to Three.js objects\n// const networkObjects = convertSVGToThreeJS(networkSVG);\n// networkObjects.forEach(object => scene.add(object));\n\n// // Position camera to view the whole scene\n// camera.position.z = 5; // adjust this value to fit your specific scene\n\n// // Create Animation Timeline\n// const timeline = GSAP.timeline();\n\n// timeline.to(particles.material.opacity, { value: 0, duration: 2 });\n// timeline.call(animateParticlesThroughNetwork, [particles, networkSVG], \"+=2\");\n// timeline.call(reformImageFromParticles, [particles], \"+=2\");\n\n// // If your animation loop is already running, just add GSAP.tick(); to it\n// function animate() {\n//   GSAP.tick();\n//   renderer.render(scene, camera);\n//   requestAnimationFrame(animate);\n// }\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA"}