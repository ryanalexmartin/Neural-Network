{"version":3,"file":"axon.js","names":["Axon","neuronA","neuronB","bezierSubdivision","cpLength","distanceTo","THREE","Math","randFloat","controlPointA","getControlPoint","controlPointB","CubicBezierCurve3","call","vertices","getSubdividedVertices","prototype","Object","create","getSpacedPoints","v1","v2","dirVec","Vector3","copy","sub","normalize","northPole","axis","crossVectors","axisTheta","angleTo","rotMat","Matrix4","makeRotationAxis","minz","cos","degToRad","z","theta","PI","r","sqrt","cpPos","sin","multiplyScalar","applyMatrix4","add","Connection","axon","startingPoint"],"sources":["../axon.js"],"sourcesContent":["// Axon extends THREE.CubicBezierCurve3 ------------------------------------------------------------------\n/* exported Axon, Connection */\n\nfunction Axon( neuronA, neuronB ) {\n\n\tthis.bezierSubdivision = 8;\n\tthis.neuronA = neuronA;\n\tthis.neuronB = neuronB;\n\tthis.cpLength = neuronA.distanceTo( neuronB ) / THREE.Math.randFloat( 1.5, 4.0 );\n\tthis.controlPointA = this.getControlPoint( neuronA, neuronB );\n\tthis.controlPointB = this.getControlPoint( neuronB, neuronA );\n\tTHREE.CubicBezierCurve3.call( this, this.neuronA, this.controlPointA, this.controlPointB, this.neuronB );\n\n\tthis.vertices = this.getSubdividedVertices();\n\n}\n\nAxon.prototype = Object.create( THREE.CubicBezierCurve3.prototype );\n\nAxon.prototype.getSubdividedVertices = function () {\n\treturn this.getSpacedPoints( this.bezierSubdivision );\n};\n\n// generate uniformly distribute vector within x-theta cone from arbitrary vector v1, v2\nAxon.prototype.getControlPoint = function ( v1, v2 ) {\n\n\tvar dirVec = new THREE.Vector3().copy( v2 ).sub( v1 ).normalize();\n\tvar northPole = new THREE.Vector3( 0, 0, 1 ); // this is original axis where point get sampled\n\tvar axis = new THREE.Vector3().crossVectors( northPole, dirVec ).normalize(); // get axis of rotation from original axis to dirVec\n\tvar axisTheta = dirVec.angleTo( northPole ); // get angle\n\tvar rotMat = new THREE.Matrix4().makeRotationAxis( axis, axisTheta ); // build rotation matrix\n\n\tvar minz = Math.cos( THREE.Math.degToRad( 45 ) ); // cone spread in degrees\n\tvar z = THREE.Math.randFloat( minz, 1 );\n\tvar theta = THREE.Math.randFloat( 0, Math.PI * 2 );\n\tvar r = Math.sqrt( 1 - z * z );\n\tvar cpPos = new THREE.Vector3( r * Math.cos( theta ), r * Math.sin( theta ), z );\n\tcpPos.multiplyScalar( this.cpLength ); // length of cpPoint\n\tcpPos.applyMatrix4( rotMat ); // rotate to dirVec\n\tcpPos.add( v1 ); // translate to v1\n\treturn cpPos;\n\n};\n\n// Connection ------------------------------------------------------------\nfunction Connection( axon, startingPoint ) {\n\tthis.axon = axon;\n\tthis.startingPoint = startingPoint;\n}\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,IAAIA,CAAEC,OAAO,EAAEC,OAAO,EAAG;EAEjC,IAAI,CAACC,iBAAiB,GAAG,CAAC;EAC1B,IAAI,CAACF,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACE,QAAQ,GAAGH,OAAO,CAACI,UAAU,CAAEH,OAAQ,CAAC,GAAGI,KAAK,CAACC,IAAI,CAACC,SAAS,CAAE,GAAG,EAAE,GAAI,CAAC;EAChF,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,eAAe,CAAET,OAAO,EAAEC,OAAQ,CAAC;EAC7D,IAAI,CAACS,aAAa,GAAG,IAAI,CAACD,eAAe,CAAER,OAAO,EAAED,OAAQ,CAAC;EAC7DK,KAAK,CAACM,iBAAiB,CAACC,IAAI,CAAE,IAAI,EAAE,IAAI,CAACZ,OAAO,EAAE,IAAI,CAACQ,aAAa,EAAE,IAAI,CAACE,aAAa,EAAE,IAAI,CAACT,OAAQ,CAAC;EAExG,IAAI,CAACY,QAAQ,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;AAE7C;AAEAf,IAAI,CAACgB,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEZ,KAAK,CAACM,iBAAiB,CAACI,SAAU,CAAC;AAEnEhB,IAAI,CAACgB,SAAS,CAACD,qBAAqB,GAAG,YAAY;EAClD,OAAO,IAAI,CAACI,eAAe,CAAE,IAAI,CAAChB,iBAAkB,CAAC;AACtD,CAAC;;AAED;AACAH,IAAI,CAACgB,SAAS,CAACN,eAAe,GAAG,UAAWU,EAAE,EAAEC,EAAE,EAAG;EAEpD,IAAIC,MAAM,GAAG,IAAIhB,KAAK,CAACiB,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEH,EAAG,CAAC,CAACI,GAAG,CAAEL,EAAG,CAAC,CAACM,SAAS,CAAC,CAAC;EACjE,IAAIC,SAAS,GAAG,IAAIrB,KAAK,CAACiB,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;EAC9C,IAAIK,IAAI,GAAG,IAAItB,KAAK,CAACiB,OAAO,CAAC,CAAC,CAACM,YAAY,CAAEF,SAAS,EAAEL,MAAO,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9E,IAAII,SAAS,GAAGR,MAAM,CAACS,OAAO,CAAEJ,SAAU,CAAC,CAAC,CAAC;EAC7C,IAAIK,MAAM,GAAG,IAAI1B,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAACC,gBAAgB,CAAEN,IAAI,EAAEE,SAAU,CAAC,CAAC,CAAC;;EAEtE,IAAIK,IAAI,GAAG5B,IAAI,CAAC6B,GAAG,CAAE9B,KAAK,CAACC,IAAI,CAAC8B,QAAQ,CAAE,EAAG,CAAE,CAAC,CAAC,CAAC;EAClD,IAAIC,CAAC,GAAGhC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAE2B,IAAI,EAAE,CAAE,CAAC;EACvC,IAAII,KAAK,GAAGjC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAE,CAAC,EAAED,IAAI,CAACiC,EAAE,GAAG,CAAE,CAAC;EAClD,IAAIC,CAAC,GAAGlC,IAAI,CAACmC,IAAI,CAAE,CAAC,GAAGJ,CAAC,GAAGA,CAAE,CAAC;EAC9B,IAAIK,KAAK,GAAG,IAAIrC,KAAK,CAACiB,OAAO,CAAEkB,CAAC,GAAGlC,IAAI,CAAC6B,GAAG,CAAEG,KAAM,CAAC,EAAEE,CAAC,GAAGlC,IAAI,CAACqC,GAAG,CAAEL,KAAM,CAAC,EAAED,CAAE,CAAC;EAChFK,KAAK,CAACE,cAAc,CAAE,IAAI,CAACzC,QAAS,CAAC,CAAC,CAAC;EACvCuC,KAAK,CAACG,YAAY,CAAEd,MAAO,CAAC,CAAC,CAAC;EAC9BW,KAAK,CAACI,GAAG,CAAE3B,EAAG,CAAC,CAAC,CAAC;EACjB,OAAOuB,KAAK;AAEb,CAAC;;AAED;AACA,SAASK,UAAUA,CAAEC,IAAI,EAAEC,aAAa,EAAG;EAC1C,IAAI,CAACD,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,aAAa,GAAGA,aAAa;AACnC"}